services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: arena-ops-db
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: arena_ops
      POSTGRES_USER: postgres
    ports:
      - "5434:5432"
    volumes:
      - arena-ops-data:/var/lib/postgresql/data
    networks:
      - arena-ops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: arena-ops-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: arena_ops
    depends_on:
      db:
        condition: service_healthy
    networks:
      - arena-ops-network
    restart: unless-stopped
    volumes:
      - ./api:/app
      - /app/node_modules

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: arena-ops-frontend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
    networks:
      - arena-ops-network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api

volumes:
  arena-ops-data:

networks:
  arena-ops-network:
    driver: bridge
